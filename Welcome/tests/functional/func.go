package functional

import "Welcome/types"

func greetingsToUser(res *types.Response) {
	if res.ChatID != 456 {
		panic(`res.ChatID != 456`)
	}
	if res.Message != "Добро пожаловать в нашего бота! Этот бот предназначен для регистрации на спортивные игры в Стамбуле, но для начала вам нужно зарегистрироваться у нас!" {
		panic(`res.Message != "Добро пожаловать в нашего бота! Этот бот предназначен для регистрации на спортивные игры в Стамбуле, но для начала вам нужно зарегистрироваться у нас!"`)
	}
	if res.Keyboard != `{"inline_keyboard":[[{"text":"Зарегистрироваться","callback_data":"GoReg","url":""}]]}` {
		panic(`res.Keyboard != {"inline_keyboard":[[{"text":"Зарегистрироваться","callback_data":"GoReg","url":""}]]}`)
	}
}

func showRules(res *types.Response) {
	if res.ChatID != 456 {
		panic(`res.ChatID != 456`)
	}
	if res.Message != `Добро Пожаловать в нашу дружную компанию! Далее я вам напишу некоторые правила, и рекомендации как пользоваться ботом:\n1. Просмотр расписания.\n     
	- Предельно просто. Вы сможете посмтореть полное расписание всех возможных игр.\n2. Регистрация на игру.\n      
	- Бот поможет вам записаться на интересующую вас игру.\n3. Посмотреть фотографии.\n      
	- Тут будут храниться все фотографии, видео, гифки и все остальное, что будут выкладывать другие пользователи с уже прошедших игр.\n4. Посмототреть мои записи.\n      
	- Нажав сюда, вы сможете посмотреть игры, которые вы ожидаете. Так же тут вы сможете отменить запись.\n\n\n
	P.S. Если что, то у бота есть волшебная команда /menu. Эта команда всегда сможет вас вернуть в главное меню. 
	Естесвенно, если вы пришлете ее, когда у вас есть какой то незаконченный процес в боте, то прогресс не сохраниться` {
		panic(`res.Message "Добро Пожаловать в нашу дружную компанию! Далее я вам напишу некоторые правила, и рекомендации как пользоваться ботом:\n1. Просмотр расписания.\n     
		- Предельно просто. Вы сможете посмтореть полное расписание всех возможных игр.\n2. Регистрация на игру.\n      
		- Бот поможет вам записаться на интересующую вас игру.\n3. Посмотреть фотографии.\n      
		- Тут будут храниться все фотографии, видео, гифки и все остальное, что будут выкладывать другие пользователи с уже прошедших игр.\n4. Посмототреть мои записи.\n      
		- Нажав сюда, вы сможете посмотреть игры, которые вы ожидаете. Так же тут вы сможете отменить запись.\n\n\n
		P.S. Если что, то у бота есть волшебная команда /menu. Эта команда всегда сможет вас вернуть в главное меню. 
		Естесвенно, если вы пришлете ее, когда у вас есть какой то незаконченный процес в боте, то прогресс не сохраниться"`)
	}
	if res.Keyboard != `{"inline_keyboard":[[{"text":"Все понятно!","callback_data":"GoNext","url":""}]]}` {
		panic(`res.Keyboard != {"inline_keyboard":[[{"text":"Все понятно!","callback_data":"GoNext","url":""}]]}`)
	}
}

func welcomeToMainMenu(res *types.Response) {
	if res.ChatID != 456 {
		panic(`res.ChatID != 456`)
	}
	if res.Message != "Добро пожаловать в гланое меню" {
		panic(`res.Message != "Добро пожаловать в гланое меню"`)
	}
	if res.Keyboard != `{"inline_keyboard":[[{"text":"Просмотр расписания","callback_data":"Looking Schedule","url":""}],[{"text":"Регистрация на игру","callback_data":"Reg to games","url":""}],[{"text":"Наши фото и видео","callback_data":"Photo\u0026Video","url":""}],[{"text":"Настройки | Мои игры","callback_data":"My records","url":""}]]}` {
		panic(`res.Keyboard != "{"inline_keyboard":[[{"text":"Просмотр расписания","callback_data":"Looking Schedule","url":""}],[{"text":"Регистрация на игру","callback_data":"Reg to games","url":""}],[{"text":"Наши фото и видео","callback_data":"Photo\u0026Video","url":""}],[{"text":"Настройки | Мои игры","callback_data":"My records","url":""}]]}"`)
	}
}

func Dir(i, j int, res *types.Response) {
	if i == 0 {
		greetingsToUser(res)
	} else if i == 1 {
		if j == 0 {
			greetingsToUser(res)
		} else if j == 1 {
			greetingsToUser(res)
		} else if j == 2 {
			showRules(res)
		}
	} else if i == 2 {
		if j == 0 {
			showRules(res)
		} else if j == 1 {
			showRules(res)
		} else if j == 2 {
			welcomeToMainMenu(res)
		}
	}
}
