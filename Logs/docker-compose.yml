networks:
  reg-to-games:
    external: true
  log-net:

services:
  kafka:
    image: bitnami/kafka:3.7
    networks:
      - reg-to-games
    #volumes:
      #- /kafkadata:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  logs-postgresql:
    restart: always
    image: postgres:14
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr, csvlog"]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./postgreSQL/create.sql:/docker-entrypoint-initdb.d/create.sql
      - ./postgreSQL/set.sql:/docker-entrypoint-initdb.d/set.sql
    ports:
      - 5499:5432
    networks:
      - log-net

  logs-app:
    build: .
    networks:
      - reg-to-games
      - log-net
    depends_on:
      - kafka
      - logs-postgresql
    command: ["wait-for-it.sh", "logs-postgresql:5432", "kafka:9092", "--", "/app/bin"]